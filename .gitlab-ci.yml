image: docker:stable
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_USERNAME: vrutkovs
  CACHE: "yes"
  IMAGE: vrutkovs/quedar
  TEST_IMAGE: registry.gitlab.com/$IMAGE:$CI_COMMIT_SHA
  RELEASE_IMAGE: docker.io/$IMAGE:latest
  RELEASE_TAG_IMAGE: docker.io/$IMAGE:$CI_COMMIT_TAG
services:
- docker:dind

before_script:
- docker login -u="GITLAB_USER_ID" -p="$GITLAB_TOKEN" registry.gitlab.com
- docker pull $TEST_IMAGE || true

stages:
  - build
  - test
  - push
  - deploy

build_image:
  stage: build
  script:
  - if [ "$CACHE" = "yes" ]; then docker pull $RELEASE_IMAGE; fi
  - docker build --pull --cache-from $RELEASE_IMAGE --build-arg BUILDID=$CI_PIPELINE_ID --build-arg REPO_URL=$CI_PROJECT_URL -t $TEST_IMAGE -t $RELEASE_IMAGE .
  - docker push $TEST_IMAGE

pipenv_check:
  stage: test
  script:
  - docker run --rm $TEST_IMAGE check

pytest:
  stage: test
  script:
  - docker run --rm $TEST_IMAGE test

dockerhub:
  stage: push
  script:
  - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
  - docker push $RELEASE_IMAGE
  only:
    refs:
      - master

push_tagged_image:
  stage: push
  script:
  - docker tag $TEST_IMAGE $RELEASE_TAG_IMAGE
  - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
  - docker push $RELEASE_TAG_IMAGE
  only:
    - tags

openshift:
  stage: deploy
  image:
    name: openshift/origin:v3.9
    entrypoint: ["/bin/sh", "-c"]
  before_script: []
  script:
  - oc login https://api.starter-us-west-2.openshift.com --token=$OPENSHIFT_TOKEN
  - oc project quedar
  - oc apply -f openshift
  - oc import-image quedar
  - oc rollout status dc/quedar -w
  only:
    refs:
      - master
  environment:
    name: production
    url: http://quedar-quedar.7e14.starter-us-west-2.openshiftapps.com
